type Mutation {
  assign_shift(
    shift_id: uuid!
    worker_id: uuid!
  ): ActionOutput
}

type Mutation {
  cancel_shift(
    shift_id: uuid!
    worker_id: uuid!
  ): ActionOutput
}

type Mutation {
  create_shift(
    request_from: String!
    worker_role_id: Int!
    data: json!
  ): ActionOutput
}

type Mutation {
  create_user(
    name: String!
    phone: String!
    worker_selected_role_id: Int
    client_id: uuid
    user_role: String!
  ): ActionOutput
}

type Query {
  find_shift(
    latitude: Float
    longitude: Float
    postcode: String
    worker_role_ids: [Int!]!
    filters: json
  ): ActionOutput
}

type Mutation {
  modify_shift(
    id: uuid!
    action: String!
    data: json
  ): ActionOutput
}

type Mutation {
  request_payout(
    amount: Int!
  ): ActionOutput
}

type Mutation {
  set_fcm_token(
    token: String!
  ): ActionOutput
}

type Mutation {
  slack_notification(
    message: String!
  ): ActionOutput
}

type Query {
  verify_user(
    phone_number: String!
  ): VerifyUserOutput
}

type ActionOutput {
  data: [json]
  error: String!
}

type VerifyUserOutput {
  message: String!
  role: String
}

