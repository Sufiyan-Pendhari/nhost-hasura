type Mutation {
  forgot_password(
    email: String
  ): forgotPasswordOutput
}

type Mutation {
  registration(
    name: String
    website: String
    firstName: String
    lastName: String
    email: String
  ): RegistrationOutput
}

type Mutation {
  resend_code(
    email: String
  ): ResendCodeOutput
}

type Mutation {
  send_invite(
    emails: String
    id: uuid
    invitedProjectId: uuid
  ): SendInviteOutput
}

type Mutation {
  set_password(
    id: uuid!
    userId: uuid!
    password: String!
    cnfPassword: String!
  ): setPasswordOutput
}

type Mutation {
  sign_in(
    email: String!
    password: String!
  ): SignInOutput
}

type Mutation {
  sign_up(
    password: String!
    email: String!
  ): SignUpOutput
}

type Mutation {
  update_user(
    firstName: String
    lastName: String
    email: String
  ): UserInfoOutput
}

type Mutation {
  verification(
    id: uuid!
    userId: uuid!
    code: String!
  ): verificationOutput
}

type Mutation {
  verify_sign_up(
    id: uuid!
    userId: uuid!
    code: String!
  ): VerifySignUpOutput
}

input RegisterInput {
  companyName: String!
  firstName: String!
  lastName: String!
  password: String!
  email: String!
}

input SignUpInput {
  password: String!
  email: String!
}

input SignInInput {
  email: String!
  password: String!
}

input SampleInput {
  id: String!
  name: String
  description: String
  timeZone: String
  updatedBy: String!
}

input organizationInput {
  name: String!
  description: String!
  timeZone: String!
  createdBy: String!
  attributes: jsonb
}

type RegisterOutput {
  id: String!
}

type SignUpOutput {
  id: uuid
  userId: uuid
  error: jsonb
}

type Extensions {
  path: String
  code: String
}

type HasuraErrors {
  extensions: Extensions
  message: String
}

type SignInOutput {
  id: uuid
  userId: uuid
  organizationId: uuid
  token: String
  error: jsonb
}

type SampleOutput {
  id: String
  name: String
  description: String
  timeZone: String
  createdAt: String
  createdBy: String
  updatedAt: String
  updatedBy: String
}

type organizationOutput {
  id: uuid
  name: String
  description: String
  timeZone: String
  createdAt: String
  createdBy: String
  updatedAt: String
  updatedBy: String
  errors: [HasuraErrors]
}

type verifySignUpOutput {
  id: uuid
  user_id: uuid
  organizationId: uuid
  token: String
  error: jsonb
}

type ResendCodeOutput {
  id: uuid
  error: jsonb
}

type VerifySignUpOutput {
  id: uuid
  userId: uuid
  organizationId: uuid
  token: String
  error: jsonb
}

type RegistrationOutput {
  id: uuid
  error: jsonb
}

type SendInviteOutput {
  message: String
  error: jsonb
}

type AcceptInviteOutput {
  message: String
  error: jsonb
}

type DecodeCookieOutput {
  data: jsonb
  error: jsonb
}

type UserInfoOutput {
  data: jsonb
  error: jsonb
}

type forgotPasswordOutput {
  id: uuid
  userId: uuid
  error: jsonb
}

type verificationOutput {
  id: uuid
  userId: uuid
  isVerified: Boolean
  error: jsonb
}

type setPasswordOutput {
  id: uuid!
  userId: uuid!
  error: jsonb
}

type isLoginOutput {
  user: jsonb
}

